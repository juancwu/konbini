name: Deploy Docker Image
on:
  pull_request:
  push:
    tags:
      - 'v*'
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.0
      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      - name: Run migrations
        env:
          DB_URL: ${{ secrets.HOST_DB_URL }}
        run: goose -dir ./migrations postgres "$DB_URL" up
  docker:
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME}}/${{ secrets.DOCKER_REPOSITORY }}:latest
          build-args: |
            VERSION=${{ github.ref_name }}
      - name: Deploy to DO
        uses: appleboy/ssh-action@v1.0.3
        env:
          # docker related envs
          IMAGE_PATH: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          APP_VERSION: ${{ github.ref_name }}
          APP_NAME: ${{ secrets.DOCKER_REPOSITORY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          # mi related envs
          MICONFIG: ${{ secrets.MICONFIG }}
          PK: ${{ secrets.PK }}
          # server related envs
          APP_ENV: ${{ secrets.APP_ENV }}
          PORT: ${{ secrets.PORT }}
          DB_URL: ${{ secrets.DB_URL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          DONOTREPLY_EMAIL: ${{ secrets.DONOTREPLY_EMAIL }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
          PGP_SYM_KEY: ${{ secrets.PGP_SYM_KEY }}
          PASS_ENCRYPT_ALGO: ${{ secrets.PASS_ENCRYPT_ALGO }}
          JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESST_TOKEN_SECRET }}
          JWT_ACCESS_TOKEN_TYPE: ${{ secrets.JWT_ACCESS_TOKEN_TYPE }}
          JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
          JWT_REFRESH_TOKEN_TYPE: ${{ secrets.JWT_REFRESH_TOKEN_TYPE }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_KEY }}
          envs: MICONFIG,PK,IMAGE_PATH,APP_NAME,APP_ENV,PORT,DB_URL,RESEND_API_KEY,DONOTREPLY_EMAIL,SERVER_URL,PGP_SYM_KEY,PASS_ENCRYPT_ALGO,JWT_ACCESS_TOKEN_SECRET,JWT_ACCESS_TOKEN_TYPE,JWT_REFRESH_TOKEN_SECRET,JWT_REFRESH_TOKEN_TYPE,JWT_ISSUER,APP_VERSION,DOCKER_USERNAME
          script: |
            echo "$MICONFIG" > .miconfig.yaml
            echo "$PK" > private.pem
            export PATH=$PATH:$HOME/go/bin
            mi bento order
            echo "APP_VERSION=$APP_VERSION" >> .env
            cat ~/docker-pat | docker login --username "$DOCKER_USERNAME" --password-stdin
            docker image pull $IMAGE_PATH
            docker container stop $APP_NAME
            docker container rm $APP_NAME
            docker container run -d --network=host --add-host=host.docker.internal:host-gateway --name $APP_NAME --env-file .env $IMAGE_PATH
            rm .miconfig.yaml
            rm private.pem
            rm .env
